obsSiteB <- filter(tempoporsite, Site == "B")
qtdSujeitosA <- as.integer(count(obsSiteA))
qtdSujeitosB <- as.integer(count(obsSiteB))
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
tabelaResumo
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitos)
sprintf("Média de tempo gasto no site B: %d", qtdSujeitos)
sprintf("Desvio padrão do tempo gasto no site A: %d", qtdSujeitos)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA
qtdSujeitosB
mediaSiteB
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
#qtdSujeitosA
#qtdSujeitosB
#mediaSiteB
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %d", mediaSiteB)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
#qtdSujeitosB
#mediaSiteB
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %d", mediaSiteB)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
#mediaSiteB
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %d", mediaSiteB)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.integer(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %d", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %d", desvPadSiteA)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.integer(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %d", desvPadSiteA)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %d", desvPadSiteA)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %d", mediaSiteB)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
#desvPadSiteA
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %d", desvPadSiteA)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %f", desvPadSiteA)
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste para o site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste para o site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %f", desvPadSiteA)
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
print("a)")
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
sprintf("Quantidade de sujeitos no teste expostos ao site A: %d", qtdSujeitosA)
sprintf("Quantidade de sujeitos no teste expostos ao site B: %d", qtdSujeitosB)
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
sprintf("Desvio padrão do tempo gasto no site A: %f", desvPadSiteA)
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
print("a)")
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site A: %d", qtdSujeitosA)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site B: %d", qtdSujeitosB)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
sprintf("Média de tempo gasto no site B: %f", mediaSiteB)
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
sprintf("Desvio padrão do tempo gasto no site A: %f", desvPadSiteA)
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
#filtro por observações de cada site
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
#ciração de uma tabela resumo
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
print("a)")
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site A: %d", qtdSujeitosA)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site B: %d", qtdSujeitosB)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
sprintf("Média de tempo gasto no site B: %.2f", mediaSiteB)
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
sprintf("Desvio padrão do tempo gasto no site A: %.2f", desvPadSiteA)
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
#filtro por observações de cada site
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
#ciração de uma tabela resumo
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
print("a)")
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site A: %d", qtdSujeitosA)
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site B: %d", qtdSujeitosB)
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
sprintf("Média de tempo gasto no site B: %.2f", mediaSiteB)
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
sprintf("Desvio padrão do tempo gasto no site A: %.3f", desvPadSiteA)
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Tempo))+  geom_boxplot() + theme_light()+
labs(x= "Sistema", y="Número de escolhas por sistema", title="4.4.c.1) Preferência entre sistemas A, B e C")
grafico5.b.1
View(tempoporsite)
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Time))+  geom_boxplot() + theme_light()+
labs(x= "Sistema", y="Número de escolhas por sistema", title="4.4.c.1) Preferência entre sistemas A, B e C")
grafico5.b.1
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Time))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_histogram() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(bins=30) + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(bins=30) + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(bins=50) + theme_light()+
labs(x= "tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=50) + theme_light()+
labs(x= "tempo por site", title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_dotplot(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_freqpoly(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot(horizontal= TRUE) + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot(notch= TRUE) + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.3 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.3) Tempo gasto por usuário nos sites A e B")+coord_flip()
grafico5.b.3
#geração de gráficos
grafico5.b.1 <- ggplot(tempoporsite, aes(Time, fill=Site))+  geom_histogram(binwidth=40) + theme_light()+
labs(x= "tempo por site", y = 'contagem',title="5.b.1) Histograma do tempo gasto por usuário nos sites A e B")
grafico5.b.1
grafico5.b.2 <- ggplot(tempoporsite, aes(Site,Time, fill=Site))+  geom_boxplot() + theme_light()+
labs(x= "Site", y="Tempo por site", title="5.b.2) Tempo gasto por usuário nos sites A e B")+coord_flip()
grafico5.b.2
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
library(readr)
#install.packages("tidyverse") #<--- caso tidyverse não esteja instalado
library(tidyverse)
#A leitura dos dados é realizado excluindo-se a primeira coluna, pois se trata de um sequêncial sem significado para o problema em questão. Além disso é realizado o "factor" dos dados para que seja possível realizar a contagem dos valores
prefsAB <- as.tibble(read_csv("Dados/prefsAB.csv",col_types = cols(Pref = col_factor(levels = c("A","B")), Subject = col_skip())))
summary(prefsAB)
library(ggplot2)
grafico4.1.c <- ggplot(prefsAB, aes(x=Pref))+  geom_bar() + theme_light()+ labs(x= "Sistema", y="Número de escolhas por sistema", title="4.1.c) Preferência entre sistemas A e B")
grafico4.1.c
#A leitura dos dados é realizado excluindo-se a primeira coluna, pois se trata de um sequêncial sem significado para o problema em questão. Além disso é realizado o "factor" dos dados para que seja possível realizar a contagem dos valores
prefsABC <- as.tibble(read_csv("Dados/prefsABC.csv",col_types = cols(Pref = col_factor(levels = c("A","B","C")), Subject = col_skip())))
grafico4.2.c <- ggplot(prefsABC, aes(x=Pref))+  geom_bar() + theme_light()+ labs(x= "Sistema", y="Número de escolhas por sistema", title="4.2.c) Preferência entre sistemas A, B e C")
grafico4.2.c
#A leitura dos dados é realizado excluindo-se a primeira coluna, pois se trata de um sequêncial sem significado para o problema em questão. Além disso é realizado o "factor" dos dados para que seja possível realizar a contagem dos valores
prefsABsex <- as.tibble(read_csv("Dados/prefsABsex.csv",
col_types = cols(Pref = col_factor(levels = c("A",
"B")),
Sex = col_factor(levels = c("M", "F")),
Subject = col_skip())))
#organização dos dados: agrupamento por preferência de sistema
tabelaPorPref.ABSex <- prefsABsex%>%
group_by(Pref,Sex)%>%
summarize(count = n())%>%
spread(Sex, count)
print(tabelaPorPref.ABSex)
#organização dos dados: agrupamento por gênero do participante
tabelaPorSex.ABSex <- prefsABsex%>%
group_by(Sex, Pref)%>%
summarize(count = n())%>%
spread(Pref, count)
print(tabelaPorSex.ABSex)
grafico4.3.c.1 <- ggplot(prefsABsex, aes(x=Pref, fill = Sex))+  geom_bar() + theme_light()+ labs(x= "Sistema", y="Número de escolhas por sistema", title="4.3.c.1) Preferência entre sistemas A e B")
grafico4.3.c.2 <- ggplot(prefsABsex, aes(x=Sex, fill = Pref))+  geom_bar() + theme_light()+ labs(x= "Sistemas escolhidos por gênero", y="Número de escolhas por sistema", title="4.3.c.2) Preferência entre sistemas A e B")+facet_wrap(~Pref)
grafico4.3.c.1
grafico4.3.c.2
#A leitura dos dados é realizado excluindo-se a primeira coluna, pois se trata de um sequêncial sem significado para o problema em questão. Além disso é realizado o "factor" dos dados para que seja possível realizar a contagem dos valores
prefsABCsex <- as.tibble(read_csv("Dados/prefsABCsex.csv",
col_types = cols(Pref = col_factor(levels = c("A",
"B", "C")), Sex = col_factor(levels = c("F",
"M")), Subject = col_skip())))
#organização dos dados: agrupamento por preferência de sistema
tabelaPorPref.ABCSex <- prefsABCsex%>%
group_by(Pref,Sex)%>%
summarize(count = n())%>%
spread(Sex, count)
print(tabelaPorPref.ABCSex)
#organização dos dados: agrupamento por gênero do participante
tabelaPorSex.ABCSex <- prefsABCsex%>%
group_by(Sex, Pref)%>%
summarize(count = n())%>%
spread(Pref, count)
print(tabelaPorSex.ABCSex)
grafico4.4.c.1 <- ggplot(prefsABCsex, aes(x=Pref, fill = Sex))+  geom_bar() + theme_light()+
labs(x= "Sistema", y="Número de escolhas por sistema", title="4.4.c.1) Preferência entre sistemas A, B e C")
grafico4.4.c.2 <- ggplot(prefsABCsex, aes(x=Sex, fill = Pref))+  geom_bar() + theme_light()+
labs(x= "Sistemas escolhidos por gênero", y="Número de escolhas por sistema", title="4.4.c.2) Preferência entre sistemas A, B e C")+facet_wrap(~Pref)
grafico4.4.c.1
grafico4.4.c.2
#leitura dos dados
tempoporsite <- read_csv("Dados/tempoporsite.csv",
col_types = cols(Site = col_factor(levels = c("A",
"B")), Subject = col_skip(), Time = col_integer()))
resumo = summary(tempoporsite)
#filtro por observações de cada site
obsSiteA <- filter(tempoporsite, Site == "A")
obsSiteB <- filter(tempoporsite, Site == "B")
#ciração de uma tabela resumo
tabelaResumo <- tibble(Site = c("A", "B"),
qtdSujeitos = c(as.integer(count(obsSiteA)),as.integer(count(obsSiteB))),
mediaTempo = c(mean(obsSiteB$Time),mean(obsSiteB$Time)),
desvPadTempo = c(sd(obsSiteB$Time),sd(obsSiteB$Time)))
#qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
print("a)")
#Cálculo da quantidade de sujeitos
qtdSujeitos <- tabelaResumo%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste: %d", qtdSujeitos)
#Cálculo da quantidade de sujeitos que utilizaram o Site A
qtdSujeitosA <- tabelaResumo%>%filter(Site== "A")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site A: %d", qtdSujeitosA)
#Cálculo da quantidade de sujeitos que utilizaram o Site B
qtdSujeitosB <- tabelaResumo%>%filter(Site== "B")%>%select(qtdSujeitos)%>%colSums(na.rm = TRUE, dims = 1L)
sprintf("Quantidade de sujeitos no teste expostos ao site B: %d", qtdSujeitosB)
#Cálculo da média de tempo gasto no Site B
mediaSiteB <- as.double(tabelaResumo%>%filter(Site == "B")%>%select(mediaTempo))
sprintf("Média de tempo gasto no site B: %.2f", mediaSiteB)
#Cálculo do desvio padrão do tempo gasto no Site A
desvPadSiteA <- as.double(tabelaResumo%>%filter(Site == "A")%>%select(desvPadTempo))
sprintf("Desvio padrão do tempo gasto no site A: %.3f", desvPadSiteA)
library(readr)
#install.packages("tidyverse") #<--- caso tidyverse não esteja instalado
library(tidyverse)
#A leitura dos dados é realizado excluindo-se a primeira coluna, pois se trata de um sequêncial sem significado para o problema em questão. Além disso é realizado o "factor" dos dados para que seja possível realizar a contagem dos valores
prefsAB <- as_tibble(read_csv("Dados/prefsAB.csv",col_types = cols(Pref = col_factor(levels = c("A","B")), Subject = col_skip())))
summary(prefsAB)
plot(cars)
plot(cars)
View(prefsABCsex)
